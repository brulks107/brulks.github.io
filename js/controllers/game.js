import*as resultText from"../views/resultText.js";import computerModule from"../lib/computer.js";import{increaseUserScore,increaseComputerScore,endOfGame,scoreAfterDraw}from"../lib/options.js";const rock="rock",paper="paper",scissors="scissors",winColor="#1FCE23",loseColor="#a8251d",drawColor="#DCCB09";window.computer=computerModule;const resultGame=(a,b)=>{let c;switch(`${a}-${b}`){case`${rock}-${scissors}`:case`${paper}-${rock}`:case`${scissors}-${paper}`:c="win";break;case`${paper}-${scissors}`:case`${rock}-${paper}`:case`${scissors}-${rock}`:c="lose";break;case`${rock}-${rock}`:case`${paper}-${paper}`:case`${scissors}-${scissors}`:c="draw";break;default:throw new Error(`There is an error with options ${a}-${b}`)}return c},game=a=>{const b=window.computer.computerChoice(),c=resultGame(a,b);void 0,void 0;({win:()=>{resultText.changeTextFirstRow(`${a.toUpperCase()} - ${b.toUpperCase()}`),resultText.changeToResultColor(winColor),resultText.changeTextSecondRow("YOU WIN :)"),increaseUserScore()},lose:()=>{resultText.changeTextFirstRow(`${a.toUpperCase()} - ${b.toUpperCase()}`),resultText.changeToResultColor(loseColor),resultText.changeTextSecondRow("YOU LOSE :("),increaseComputerScore()},draw:()=>{resultText.changeTextFirstRow(`${a.toUpperCase()} - ${b.toUpperCase()}`),resultText.changeToResultColor(drawColor),resultText.changeTextSecondRow("DRAW ~.~"),scoreAfterDraw()}})[c](),endOfGame()};export default game;